#!/usr/bin/perl

use JSON;
use CGI;
use Configure;
use strict;

my $cgi = new CGI;

$0 =~ s/.*\///;

my $DEBUG = 1;

use vars qw($key $val $success);
my $email = 'zhangs3@email.chop.edu';

$val = $cgi->param('POSTDATA');

if(!$val)
{
    print OUT "no data for POSTDATA\n" if $DEBUG;
    exit(0);
}

$val = decode_json($val);

my $user = $val->{'build'}->{'log'};
$user =~ s/Notifying endpoint.*$//s;
$user =~ s/[[:^print:]]+$//s;
$user =~ s/.*[[:^print:]](\[0m)?//s;

$user =~ s/^Started by //;

my $name = $val->{'name'};
my $url = $val->{'build'}->{'full_url'};
my $phase = $val->{'build'}->{'phase'};
my $status = $val->{'build'}->{'status'};

my $data = '';
if($phase eq 'STARTED')
{
    $data .= $name . ' build started by ' . $user . "\n";
}
else
{
    if($status eq 'SUCCESS')
    {
        $data .= $name . " build completed successfully.\n";
        $success = 1;
    }
    else
    {
        $success = 0;
        $data .= $name . " build failed.\n";
    }
}

$data .= $url . "console\n";

my $cmd = 'curl -X POST -H \'Content-type: application/json\' --data \'{"text":"' . $data . '"}\' https://hooks.slack.com/services/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';

system($cmd);

$cmd = "mail -s 'Jenkins Build Status' $email";
open(MAIL, "|$cmd");
print MAIL $data;
close(MAIL);

exit(0);

sub printhash
{
    my $val = shift;
    my $lvl = shift;
    my $ind = "\t" x $lvl++; 

    foreach $key (sort keys %$val)
    {
        if(ref($val->{$key}) eq 'HASH')
        {
            print OUT $ind, $key , ":\n";
            printhash($val->{$key}, $lvl);
        }
        elsif(ref($val->{$key}) eq 'ARRAY')
        {
            print OUT $ind, $key , ":\n";
            printarray($val->{$key}, $lvl);
        }
        else # must be scalar
        { 
            print OUT $ind, $key , '=', $val->{$key}, "\n";
        }
    }
}

sub printarray
{
    my $val = shift;
    my $lvl = shift;
    my $ind = "\t" x $lvl++; 

    foreach $val (sort @$val)
    {
        if(ref($val) eq 'HASH')
        {
            printhash($val, $lvl);
        }
        elsif(ref($val) eq 'ARRAY')
        {
            printarray($val, $lvl);
        }
        else # must be scalar
        { 
            print OUT $ind, $val, "\n";
        }
    }
}
