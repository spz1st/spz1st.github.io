#!/usr/bin/perl
#
# A script to reveive notification from a GitHub server upon a push to
# a repository and remotely trigger, if needed, a build on a Jenkins server.

use JSON;
use CGI;
$cgi = new CGI;

$0 =~ s/.*\///;

print "Content-type: text/html\n\n";

$payload = $cgi->param('payload');  # from the github server

if(!$payload)  # must have been invoked directly
{
    # just quit silently after putting a note in the error log
    print STDERR __FILE__, ": no payload!\n";
    exit(0);
}

$payload = decode_json($payload);

$branch = $cgi->param('branch');
if(! $branch || $branch eq '*') # no branch specified or specified with a wildcard
{
    $build = 'master';
}
else
{
    $ref = $payload->{'ref'};  # should contain the name of the pushed branch 
    $build = 0;
    foreach (split(/[,:]/, $branch))
    {
        if($ref =~ /heads\/$_$/)  # branch matches
        {
            $build = $_;
            last;
        }
    }
}

if($build)
{
    $user = $cgi->param('user');
    $token = $cgi->param('token');
    $url = $cgi->param('url');
    $pass = password($user);  # fetch the password, see comments below
    $curl = "curl --user $user:$pass $url?token=$token&BRANCH=$build";
    system($curl);
}

exit(0);

# the subroutine password is supposed to return the password of the user
# it's up to you how to store and fetch the user's password.
sub password
{
   my $user = shift;
   my %passwords = ();
   return $password{$user};
}
